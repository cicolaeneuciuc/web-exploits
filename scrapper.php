<?php
	include('db.php');
	include("functions.php");
	require_once "HtmlDomParser.php";
	$marcat_nenoi_restu = 0;
	foreach ($categories as $category) {//Parcurg fiecare categorie
		//Trecem de protectia anti DDOS setand niste headere sa semene cu mozilla
		$user_agent = 'Mozilla/5.0 (Windows NT 6.1; rv:8.0) Gecko/20100101 Firefox/8.0';

		$options = array(

			CURLOPT_CUSTOMREQUEST => "GET",        //set request type post or get
			CURLOPT_POST => false,        //set to GET
			CURLOPT_USERAGENT => $user_agent, //set user agent
			CURLOPT_COOKIEFILE => "cookie.txt", //set cookie file
			CURLOPT_COOKIEJAR => "cookie.txt", //set cookie jar
			CURLOPT_RETURNTRANSFER => true,     // return web page
			CURLOPT_HEADER => false,    // don't return headers
			CURLOPT_FOLLOWLOCATION => true,     // follow redirects
			CURLOPT_ENCODING => "",       // handle all encodings
			CURLOPT_AUTOREFERER => true,     // set referer on redirect
			CURLOPT_CONNECTTIMEOUT => 120,      // timeout on connect
			CURLOPT_TIMEOUT => 120,      // timeout on response
			CURLOPT_MAXREDIRS => 10,       // stop after 10 redirects
		);

		$ch = curl_init("https://www.exploit-db.com/" . $category);
		curl_setopt_array($ch, $options);
		$content = curl_exec($ch);
		$err = curl_errno($ch);
		$errmsg = curl_error($ch);
		$header = curl_getinfo($ch);
		curl_close($ch);

		$header['errno'] = $err;
		$header['errmsg'] = $errmsg;
		$header['content'] = $content;


		$get = [array(
			"title" => "",
			"date" => "",
			"autor" => "",
			"url" => "",
			"raw" => ""
		)];
		$count = 0;
		$count2 = 0;
		$count3 = 0;
		$title = [];
		$html = $header['content'];
		$dom = HtmlDomParser::str_get_html($html);
		//Pentru fiecare td ce contine clasa description, iar in interior se regaseste tag-ul a extrage urmatoarele.
		foreach ($dom->find('td.description a') as $a) {
			$get[$count]['title'] = trim($a->text());
			$get[$count]['url'] = trim($a->href);
			$get[$count]['raw'] = str_replace('exploits', 'raw', trim($a->href));

			$count++;
		}
		//Extrage toate td-urile cu clasa date
		foreach ($dom->find('td.date') as $a) {

			$get[$count2]['date'] = trim($a->text());
			$count2++;
		}
		//Extrage toate td-urile cu clasa author
		foreach ($dom->find('td.author') as $a) {

			$get[$count3]['autor'] = trim($a->text());
			$count3++;
		}
		$newcont = 0;
		$new = [array(
			"title" => "",
			"date" => "",
			"autor" => "",
			"url" => "",
			"raw" => "")];
		$send_email = 0;
		//Vector frecventa categorii
		$categories_frecv_array = ["webapps" => 0, "remote" => 0, "local" => 0, "dos" => 0];
		//Aici verifica in baza de date daca a aparut ceva nou.

		foreach ($get as $key => $value) {
			$sql = $conn->prepare('SELECT count(link) FROM news WHERE link = ?');
			$sql->execute(array($value['url']));
			$count = $sql->fetchColumn();

			if ($count == 0) //Daca a gasit ceva nou
			{
				if ($marcat_nenoi_restu == 0) {
					$stmt = $conn->prepare('UPDATE news SET new=0');
					$stmt->execute();
					$marcat_nenoi_restu = 1;
				}
				$new[$newcont]['title'] = $value['title'];
				$new[$newcont]['date'] = $value['date'];
				$new[$newcont]['autor'] = $value['autor'];
				$new[$newcont]['url'] = $value['url'];
				$new[$newcont]['raw'] = $value['raw'];
				$stmt = $conn->prepare("INSERT INTO news (titlu, date,autor,link,raw,category,new) VALUES (?, ?, ?, ?, ?, ?,1)");
				$stmt->bindParam(1, $value['title']);
				$stmt->bindParam(2, $value['date']);
				$stmt->bindParam(3, $value['autor']);
				$stmt->bindParam(4, $value['url']);
				$stmt->bindParam(5, $value['raw']);
				$stmt->bindParam(6, $category);

				$stmt->execute();
				$newcont++;
				$send_email = 1;
				$categories_frecv_array[$category]++;
			}
		}

		if ($send_email == 1) {
			//Trimit emailurile
			send_notifications_emails($conn, $categories_frecv_array);
		}
	}

?>