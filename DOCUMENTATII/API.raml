/load-vulnerabilities.php:
  description: Toate vulnerabilitatile din baza de date
  get:
    description: Preia vulnerabilitatile bazate pe parametrii GET
    queryParameters:
      p:
        description: "Pagina este un parametru optional fiind initializat cu 0 initial, e tip natural"
        required: false
        minLength: 1
        type: integer
        example: 3
      keyword:
          description: "Cuvantul cheie este un parametru optional ce are ca scop filtrarea vulnerabilitatilor dupa un anumit cuvant cheie"
          required: false
          minLength: 1
          type: string
          example: "remote access"
      keyword:
          description: "Categoriile ce urmeaza a nu fi afisate sunt defapt un string tip JSON care va fi parsat server side"
          required: false
          type: json
          example: '["webapps","remote"]'
    responses:
      200:
        body:
          application/json:
            type: |
                {
                  "type": "object",
                  "$schema": "http://json-schema.org/draft-03/schema",
                  "id": "http://jsonschema.net",
                  "required": true,
                  "properties": {
                    "nr_results": {
                      "type": "integer",
                      "required": true
                    },
                    "results": {
                      "type": "array",
                      "required": true,
                      "properties": {
                        "id": {
                            "type": "integer",
                            "required": true
                        },
                        "titlu": {
                             "type": "string",
                             "required": true
                        },
                        "autor":  {
                             "type": "string",
                             "required": true
                         },
                        "raw": {
                             "type": "string",
                             "required": true
                         },
                        "link":  {
                             "type": "string",
                             "required": true
                        },
                        "date_row":  {
                             "type": "datetime",
                             "required": true
                        },
                        "date":  {
                             "type": "datetime",
                             "required": true
                         },
                        "category": {
                             "type": "string",
                             "required": true
                        },
                        "new": {
                             "type": "integer",
                             "required": true
                         },
                      }
                    }
                  }
                }
            example: |
              {
                 "nr_results": 223,
                 "results": [
                    {
                       "id": "20",
                       "titlu": "Event Manager Admin panel - 'events_new.php' SQL injection",
                       "autor": "telahdihapus",
                       "raw": "&lt;pre&gt;# Exploit Title: Event Manager PHP Script Admin panel - 'events_new.php' SQL injection\r\n# Date: 2018-06-10\r\n# Exploit Author: telahdihapus\r\n# Vendor Homepage: https://codecanyon.net/user/ezcode\r\n# Software Link: https://codecanyon.net/item/eventmanager-php-script-admin-panel/21280741\r\n# Tested on: windows 10\r\n\r\n# 1. description :\r\n# Insert data in events_new.php do not use escape string function, \r\n# so attacker can put qoute character and inject query in insert data.\r\n\r\n# 2. POC :\r\nlogin in admin page http://victim.com/cms/, or you can register admin if you not have, register at http://victim.com/cms/register.\r\n\r\ngo to http://victim.com/cms/events_new.php\r\n\r\nadd new title, add some value and press &quot;new type&quot; button. you can see success notice.\r\n\r\nnow, add payload to value.\r\n\r\nexample payload = a'), (120, (select version()))-- -\r\n\r\n120 is id, you can put your cursor in delete button, to see id, and you can prediction next id.&lt;/pre&gt;",
                       "link": "https://www.exploit-db.com/exploits/44868/",
                       "date_row": "2018-06-18 17:48:37",
                       "date": "2018-06-11",
                       "category": "webapps",
                       "new": "0",
                    },
                    {
                       "id": "21",
                       "titlu": "WordPress Plugin Pie Register &lt; 3.0.9 - Blind SQL Injection",
                       "autor": "Manuel García ...",
                       "raw": "&lt;pre&gt;# Title: WordPress Plugin Pie Register &lt; 3.0.9 - Blind SQL Injection\r\n# Author: Manuel García Cárdenas\r\n# Date: 2018-05-10\r\n# Software: WordPress Plugin Pie Register 3.0.9\r\n# CVE: CVE-2018-10969\r\n\r\n# I. VULNERABILITY\r\n# WordPress Plugin Pie Register 3.0.9 - Blind SQL Injection\r\n\r\n# II. BACKGROUND\r\n# Pie-Register is a quick and easy way to brand your Registration Pages on\r\n# WordPress sites.\r\n\r\n# III. DESCRIPTION\r\n# This bug was found using the portal in the files:\r\n# /pie-register/classes/invitation_code_pagination.php:    if ( isset(\r\n# $_GET['order'] ) &amp;&amp; $_GET['order'] )\r\n# /pie-register/classes/invitation_code_pagination.php:    $order =\r\n# $_GET['order'];\r\n# And when the query is executed, the parameter &quot;order&quot; it is not sanitized.\r\n# /pie-register/classes/invitation_code_pagination.php:    $this-&gt;order = esc_sql( $order );\r\n\r\n# IV. PROOF OF CONCEPT\r\n# The following URL have been confirmed to all suffer from Time Based SQL Injection.\r\n\r\nGET\r\n/wordpress/wp-admin/admin.php?page=pie-invitation-codes&amp;orderby=name&amp;order=desc\r\n(original)\r\n\r\nGET\r\n/wordpress/wp-admin/admin.php?page=pie-invitation-codes&amp;orderby=name&amp;order=desc%2c(select*from(select(sleep(2)))a)\r\nHTTP/1.1(2 seconds of response)\r\n\r\nGET\r\n/wordpress/wp-admin/admin.php?page=pie-invitation-codes&amp;orderby=name&amp;order=desc%2c(select*from(select(sleep(30)))a)\r\nHTTP/1.1(30 seconds of response)\r\n\r\n# V. SYSTEMS AFFECTED\r\n# Pie Register &lt;= 3.0.9\r\n\r\n# VI. DISCLOSURE TIMELINE\r\n# May 10, 2018 1: Vulnerability acquired by Manuel Garcia Cardenas\r\n# May 10, 2018 2: Send to vendor without response\r\n# June 05, 2018 3: Second email to vendor without response\r\n# June 11, 2018 4: Send to the Full-Disclosure lists\r\n\r\n# VII. Solution\r\n# Disable plugin until a fix is available&lt;/pre&gt;",
                       "link": "https://www.exploit-db.com/exploits/44867/",
                       "date_row": "2018-06-18 17:48:37",
                       "date": "2018-06-11",
                       "category": "webapps",
                       "new": "0",
                    }
                 ]
               }
